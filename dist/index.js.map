{"version":3,"file":"index.js","sources":["../src/create-client.js","../src/reduxify-services.js","../src/reduxify-auth.js","../src/reduxify-utils.js","../src/bind-services.js","../src/index.js"],"sourcesContent":["import feathers from '@feathersjs/client'\nimport axios from 'axios'\nimport io from 'socket.io-client'\n\n/**\n * Creates a FeathersJS client configured with either an Axois REST or socket.io connection.\n * @param  {boolean} useSockets When true, use a socketio connection to the server.\n * @param  {string}  apiUrl     URL of the API server\n * @param  {object}  auth       Optional. Object with keys: path, service, and storageKey (all strings)\n * @return {object}  The new FeathersJS client instance\n */\nexport default function createClient (name, useSockets, apiUrl, auth) {\n  const client = feathers()\n\n  if (useSockets) {\n    client.configure(feathers.socketio(io(apiUrl)))\n  } else {\n    client.configure(feathers.rest(apiUrl).axios(axios))\n  }\n\n  if (auth) {\n    client.set('storage', window.localStorage)\n    client.configure(feathers.authentication(auth))\n  }\n\n  client.name = name\n  console.log('name', name)\n  return client\n}\n","import { createAction, handleActions } from 'redux-actions'\n\nconst ID_FIELD = 'id'\nconst SORT_FUNCS = {\n  'nameAsc': store => (a, b) => store[a].name.localeCompare(store[b].name),\n  'nameDec': store => (a, b) => store[b].name.localeCompare(store[a].name),\n  'rankAsc': store => (a, b) => Number(store[a].rank) - Number(store[b].rank),\n  'rankDec': store => (a, b) => Number(store[b].rank) - Number(store[a].rank)\n}\n\nfunction createMethodReducer (name, type, idField) {\n  const DEFAULT = {\n    error: null,\n    loading: false,\n    result: null,\n    current: null,\n    store: {},\n    keys: [],\n    saved: 0\n  }\n\n  return {\n    [`${name}_PENDING`]: (state = DEFAULT, action) => ({\n      ...state,\n      error: null,\n      loading: true\n    }),\n    [`${name}_REJECTED`]: (state = DEFAULT, action) => ({\n      ...state,\n      error: action.payload,\n      loading: false\n    }),\n    [`${name}_FULFILLED`]: (state = DEFAULT, action) => {\n      let result = action.payload\n      let ret = {\n        ...state,\n        error: null,\n        loading: false,\n        result: result\n      }\n\n      switch (type) {\n        case 'find':\n          ret.current = null\n          if (result && Array.isArray(result)) {\n            ret.store = result.reduce((acc, val) => {\n              if (!val[idField]) console.warn('Received object without valid idField')\n              else acc[val[idField]] = val\n              return acc\n            }, {})\n          } else {\n            ret.store = {}\n          }\n          break\n\n        case 'get':\n          ret.current = result\n          ret.store[result[idField]] = result\n          break\n\n        case 'create':\n        case 'patch':\n          ret.current = result\n          ret.saved = Date.now()\n          ret.store[result[idField]] = result\n          break\n\n        case 'remove':\n          ret.current = null\n          delete ret.store[result[idField]]\n          break\n\n        default:\n          throw new Error('Invalid method type ' + type)\n      }\n      ret.keys = Object.keys(ret.store)\n      return ret\n    }\n  }\n}\n\nfunction reduxifyService (app, actions, reducers, route, name, idField, sortFunctions) {\n  const serviceName = `${app.name}/services/${name.toUpperCase()}_`\n\n  const service = app.service(route)\n  if (!service) throw new Error(`Could not find service ${route}`)\n\n  // Action types\n  const FIND = serviceName + 'FIND'\n  const GET = serviceName + 'GET'\n  const CREATE = serviceName + 'CREATE'\n  const PATCH = serviceName + 'PATCH'\n  const REMOVE = serviceName + 'REMOVE'\n  const RESET = serviceName + 'RESET'\n  const SET_CURRENT = serviceName + 'SET_CURRENT'\n  const SORT = serviceName + 'SORT'\n\n  actions[name] = {\n    find: createAction(FIND, (params) => ({ promise: service.find(params) })),\n    get: createAction(GET, (id, params) => ({ promise: service.get(id, params) })),\n    create: createAction(CREATE, (data, params) => ({ promise: service.create(data, params) })),\n    patch: createAction(PATCH, (id, data, params) => ({ promise: service.patch(id, data, params) })),\n    remove: createAction(REMOVE, (id, params) => ({ promise: service.remove(id, params) })),\n    setCurrent: createAction(SET_CURRENT),\n    sort: createAction(SORT),\n    reset: createAction(RESET)\n  }\n\n  reducers[name] = handleActions(Object.assign({},\n    createMethodReducer(FIND, 'find', idField),\n    createMethodReducer(GET, 'get', idField),\n    createMethodReducer(CREATE, 'create', idField),\n    createMethodReducer(PATCH, 'patch', idField),\n    createMethodReducer(REMOVE, 'remove', idField),\n    {\n      [SET_CURRENT]: (state, action) => {\n        if (state.loading) return state\n        return {\n          ...state,\n          current: state.store[action.payload]\n        }\n      },\n      [SORT]: (state, action) => {\n        if (state.loading) return state\n        let sortBy = action.payload\n        if (typeof sortBy === 'string') sortBy = sortFunctions[sortBy]\n        return {\n          ...state,\n          keys: [...state.keys].sort(sortBy(state.store))\n        }\n      },\n      [RESET]: (state, action) => {\n        if (state.loading) return state\n        return {\n          ...state,\n          error: null,\n          loading: false,\n          result: null,\n          current: null,\n          store: {},\n          keys: [],\n          saved: 0\n        }\n      }\n    }\n  ), {\n    error: null,\n    loading: false,\n    result: null,\n    current: null,\n    store: {},\n    saved: 0,\n    keys: []\n  })\n}\n\n/**\n * Creates redux bindings (action-creators and reducers) for each service\n * @param  {object} app           FeathersJS client instance\n * @param  {object} actions       Object wherein to store the service action-creators\n * @param  {object} reducers      Object wherein to store the service reducers\n * @param  {object} routeNameMap  Object with the following format: { serviceName: 'api/service-url', ... }\n * @param  {string} idField       Field used for ids, default `id`.\n * @param  {object} sortFunctions Object with named sorting functions, eg: { 'nameAsc': store => (a, b) => store[a].name.localeCompare(store[b].name) }\n */\nexport default function reduxifyServices (app, actions, reducers, routeNameMap, idField = ID_FIELD, sortFunctions = SORT_FUNCS) {\n  let names = Object.keys(routeNameMap)\n  for (let i = 0; i < names.length; i++) {\n    reduxifyService(app, actions, reducers, routeNameMap[names[i]], names[i], idField, sortFunctions)\n  }\n}\n","import { createAction, handleActions } from 'redux-actions'\n\n/**\n * Creates Redux bindings (reducers and actions) for the FeathersJS authentication service\n * @param {object}    app            FeathersJS client instance\n * @param {object}    actions        Object wherein to store the service action-creators\n * @param {object}    reducers       Object wherein to store the service reducers\n * @param {object}    authConfig     Optional. Object with keys: path, service, and storageKey (all strings)\n * @param {function}  authInitialize Optional. Function that runs after the user has authenticated.\n *                                   Takes in `data`, and should return it afterwards.\n */\nexport default function reduxifyAuth (app, actions, reducers, authConfig, authInitialize = (data => data)) {\n  // ACTION TYPES\n  const AUTHENTICATE = app.name + '/auth/AUTHENTICATE'\n  const LOGOUT = app.name + '/auth/LOGOUT'\n\n  // ACTION CREATORS\n  actions.auth = {\n    // Note: action.payload in reducer will have the value of .data below\n    authenticate: createAction(\n      AUTHENTICATE, (p) => ({\n        promise: app.authenticate(p).then(authInitialize),\n        data: undefined\n      })\n    ),\n    logout: createAction(LOGOUT),\n    checkJWT: jwt => {\n      // Try to fetch from local storage\n      if (!jwt) {\n        jwt = app.get('storage').getItem(authConfig.storageKey || 'feathers-jwt')\n      }\n\n      if (!jwt) return false\n\n      return actions.auth.authenticate({ strategy: 'jwt', jwt })\n    }\n  }\n\n  // REDUCER\n  reducers.auth = handleActions(\n    {\n      [`${AUTHENTICATE}_PENDING`]: (state, action) => {\n        return ({\n          ...state,\n          errors: null,\n          loading: true,\n          valid: false,\n          admin: false,\n          user: null,\n          token: null,\n          ignorePendingAuth: false\n        })\n      },\n\n      [`${AUTHENTICATE}_FULFILLED`]: (state, action) => {\n        const user = action.payload.user\n\n        if (state.ignorePendingAuth) {\n          // A logout was dispatched between the authentication being started and completed\n          app.logout()\n\n          return {\n            ...state,\n            errors: null,\n            loading: false,\n            valid: false,\n            admin: false,\n            data: null,\n            token: null,\n            ignorePendingAuth: false\n          }\n        }\n\n        return {\n          ...state,\n          errors: null,\n          loading: false,\n          valid: true,\n          admin: user.admin || false,\n          user: user,\n          token: action.payloadtoken,\n          ignorePendingAuth: false\n        }\n      },\n\n      [`${AUTHENTICATE}_REJECTED`]: (state, action) => {\n        return {\n          ...state,\n          // action.payload = { name: \"NotFound\", message: \"No record found for id 'G6HJ45'\",\n          //   code:404, className: \"not-found\" }\n          errors: action.payload,\n          loading: false,\n          valid: false,\n          admin: false,\n          user: null,\n          token: null,\n          ignorePendingAuth: false\n        }\n      },\n\n      [LOGOUT]: (state, action) => {\n        app.logout()\n\n        return ({\n          ...state,\n          errors: null,\n          loading: null,\n          valid: false,\n          admin: false,\n          user: null,\n          token: null,\n          // Ignore the result if an authentication has been started\n          ignorePendingAuth: state.isLoading\n        })\n      }\n    },\n    {\n      errors: null,\n      loading: false,\n      valid: false,\n      admin: false,\n      user: null,\n      ignorePendingAuth: false\n    }\n  )\n}\n","import { createAction } from 'redux-actions'\n\nfunction reduxifyUtil (app, actions, route, name) {\n  const SERVICE_NAME = `${app.name}/services/${name.toUpperCase()}_`\n\n  const service = app.service(route)\n  if (!service) throw new Error(`Could not find service ${route}`)\n\n  // Action types\n  actions[name] = {\n    find: createAction(`${SERVICE_NAME}FIND`, (params) => ({ promise: service.find(params) })),\n    get: createAction(`${SERVICE_NAME}GET`, (id, params) => ({ promise: service.get(id, params) })),\n    create: createAction(`${SERVICE_NAME}CREATE`, (data, params) => ({ promise: service.create(data, params) })),\n    patch: createAction(`${SERVICE_NAME}PATCH`, (id, data, params) => ({ promise: service.patch(id, data, params) })),\n    remove: createAction(`${SERVICE_NAME}REMOVE`, (id, params) => ({ promise: service.remove(id, params) }))\n  }\n}\n\n/**\n * Creates redux bindings (action-creators and reducers) for each service\n * @param  {object} app           FeathersJS client instance\n * @param  {object} actions       Object wherein to store the service action-creators\n * @param  {object} routeNameMap  Object with the following format: { serviceName: 'api/service-url', ... }\n */\nexport default function reduxifyUtils (app, actions, routeNameMap) {\n  let names = Object.keys(routeNameMap)\n  for (let i = 0; i < names.length; i++) {\n    reduxifyUtil(app, actions, routeNameMap[names[i]], names[i])\n  }\n}\n","import { bindActionCreators } from 'redux'\n\n/**\n * Method to bind a given dispatch function with the passed services.\n *\n * This helps with not having to pass down store.dispatch as a prop everywhere\n * Read More: http://redux.js.org/docs/api/bindActionCreators.html\n *\n * @param  {object}   services        Using the default reduxifyService method\n * @param  {function} dispatch        The relevant store.dispatch function which is to be bounded to actionCreators\n * @param  {array}    targetActions   List of action names to be targeted for binding\n * @return {object}                   Returns the new services object with the bounded action creators\n */\nexport default function (dispatch, services, targetActions) {\n  targetActions = targetActions || [\n    // default targets from feathers-redux\n    'find',\n    'get',\n    'create',\n    'patch',\n    'remove',\n    'reset',\n    'setCurrent',\n    'sort',\n    // couple more optional ones in case feathers-reduxify-authentication is being used\n    'authenticate',\n    'logout'\n  ]\n\n  const serviceNames = Object.keys(services)\n  // map over the services object to get every service\n  serviceNames.forEach(name => {\n    const methodNames = Object.keys(services[name])\n\n    // map over every method in the service\n    methodNames.forEach(method => {\n      // if method is in targeted actions then replace it with bounded method\n      if (targetActions.indexOf(method) >= 0) {\n        services[name][method] = bindActionCreators(\n          services[name][method],\n          dispatch\n        )\n      }\n    })\n  })\n\n  return services\n}\n","import promiseMiddleware from 'redux-promise-middleware'\nimport createClient from './create-client'\nimport reduxifyServices from './reduxify-services'\nimport reduxifyAuth from './reduxify-auth'\nimport reduxifyUtils from './reduxify-utils'\nimport bindServicesWithDispatch from './bind-services'\n\n// let client\n// let services\n// let serviceReducers\n// let serviceNames\n// let servicesBound = false\n\nexport default class ReactFeathers {\n  /**\n   * Creates the FeathersJS client and configures auth and services\n   * @param  {boolean}  options.name            Specify a name for this feathers connection (defaults to 'api').\n   * @param  {boolean}  options.useSockets      When true, a socket.io connection to the API server will be created\n   * @param  {string}   options.apiUrl          URL to the API server\n   * @param  {object}   options.serviceNameMap  Object with serviceName as the keys, and remote service-url as the values\n   * @param  {object}   options.utilNameMap     Object with utilName as the keys, and remote util-url as the values.\n   *                                            Utils are defined as services that have no store (local cache)\n   * @param  {object}   options.authConfig      Optional. Object with keys: path, service, and storageKey (all strings)\n   * @param  {function} options.authInitialize  Optional. Function that runs after the user has authenticated. Takes in\n   *                                            `data`, and should return it afterwards.\n   * @param  {string}   options.idField         Optional. Field returned by server that has the `id` value. Default 'id'\n   * @param  {object}   options.sortFunctions   Optional. Object with the name of a sort function as the key and a\n   *                                            function that takes in the store and returns a valid sort function as\n   *                                            the value. Ex: `store => (a, b) => store[a].name.localeCompare(store[b].name)`\n   * @return {object}   An object with all serviceNames mapped to objects with their action creators.\n   */\n  constructor ({ name, useSockets, apiUrl, serviceNameMap, utilNameMap, authConfig, authInitialize, idField, sortFunctions }) {\n    this.name = name || 'api'\n    this.client = createClient(this.name, useSockets, apiUrl, authConfig)\n\n    this.services = {}\n    this.serviceReducers = {}\n    this.serviceNames = Object.keys(serviceNameMap)\n    reduxifyServices(this.client, this.services, this.serviceReducers, serviceNameMap, idField, sortFunctions)\n\n    if (utilNameMap) {\n      this.serviceNames.push(Object.keys(utilNameMap))\n      reduxifyUtils(this.client, this.services, utilNameMap)\n    }\n\n    if (authConfig) {\n      this.serviceNames.unshift('auth')\n      reduxifyAuth(this.client, this.services, this.serviceReducers, authConfig, authInitialize)\n    }\n  }\n\n  /**\n   * Returns the FeathersJS client instance (after setup() has been called)\n   */\n  getClient () {\n    return this.client\n  }\n\n  /**\n   * Returns the services object, which has all their action-creators (after setup() has been called). If the store\n   * param is passed and the services have not been bound with the store's dispatch function, the binding takes place.\n   * @param  {object} store Redux store\n   */\n  getServices (store) {\n    if (store && !this.servicesBound) {\n      bindServicesWithDispatch(store.dispatch, this.services)\n      this.servicesBound = true\n    }\n    return this.services\n  }\n\n  /**\n   * Returns reducers for all services in a object where the keys are service names and the values are their reducers\n   */\n  getServiceReducers () {\n    return this.serviceReducers\n  }\n\n  /**\n   * Helper function for redux store. Returns an array with reduxThunk and reduxPromimseMiddleware, which are needed to\n   * process the events from the services. If you are already using these two middleware libraries, you do not need to\n   * use this function.\n   */\n  getMiddleware () {\n    return [ promiseMiddleware() ]\n  }\n}\n"],"names":["createClient","name","useSockets","apiUrl","auth","client","feathers","configure","socketio","io","rest","axios","set","window","localStorage","authentication","log","ID_FIELD","SORT_FUNCS","a","b","store","localeCompare","Number","rank","createMethodReducer","type","idField","DEFAULT","state","action","payload","result","ret","current","Array","isArray","reduce","acc","val","console","warn","saved","Date","now","Error","keys","Object","reduxifyService","app","actions","reducers","route","sortFunctions","serviceName","toUpperCase","service","FIND","GET","CREATE","PATCH","REMOVE","RESET","SET_CURRENT","SORT","createAction","params","promise","find","id","get","data","create","patch","remove","handleActions","assign","loading","sortBy","sort","reduxifyServices","routeNameMap","names","i","length","reduxifyAuth","authConfig","authInitialize","AUTHENTICATE","LOGOUT","p","authenticate","then","undefined","jwt","getItem","storageKey","strategy","user","ignorePendingAuth","logout","admin","payloadtoken","isLoading","reduxifyUtil","SERVICE_NAME","reduxifyUtils","dispatch","services","targetActions","serviceNames","forEach","methodNames","indexOf","method","bindActionCreators","ReactFeathers","serviceNameMap","utilNameMap","serviceReducers","push","unshift","servicesBound","promiseMiddleware"],"mappings":"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"}