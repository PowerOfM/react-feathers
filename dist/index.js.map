{"version":3,"file":"index.js","sources":["../src/create-client.js","../src/reduxify-services.js","../src/reduxify-auth.js","../src/bind-services.js","../src/index.js"],"sourcesContent":["import feathers from '@feathersjs/client'\nimport axios from 'axios'\nimport io from 'socket.io-client'\n\n/**\n * Creates a FeathersJS client configured with either an Axois REST or socket.io connection.\n * @param  {boolean} useSockets When true, use a socketio connection to the server.\n * @param  {string}  apiUrl     URL of the API server\n * @param  {object}  auth       Optional. Object with keys: path, service, and storageKey (all strings)\n * @return {object}  The new FeathersJS client instance\n */\nexport default function createRestClient (useSockets, apiUrl, auth) {\n  const client = feathers()\n\n  if (useSockets) {\n    client.configure(feathers.socketio(io(apiUrl)))\n  } else {\n    client.configure(feathers.rest(apiUrl).axios(axios))\n  }\n\n  if (auth) {\n    client.set('storage', window.localStorage)\n    client.configure(feathers.authentication(auth))\n  }\n\n  return client\n}\n","import { createAction, handleActions } from 'redux-actions'\n\nconst ID_FIELD = 'id'\nconst SORT_FUNCS = {\n  'nameAsc': store => (a, b) => store[a].name.localeCompare(store[b].name),\n  'nameDec': store => (a, b) => store[b].name.localeCompare(store[a].name),\n  'rankAsc': store => (a, b) => Number(store[a].rank) - Number(store[b].rank),\n  'rankDec': store => (a, b) => Number(store[b].rank) - Number(store[a].rank)\n}\n\nfunction createMethodReducer (name, type, idField) {\n  const DEFAULT = {\n    error: null,\n    loading: false,\n    result: null,\n    current: null,\n    store: {},\n    keys: [],\n    saved: 0\n  }\n\n  return {\n    [`${name}_PENDING`]: (state = DEFAULT, action) => ({\n      ...state,\n      error: null,\n      loading: true\n    }),\n    [`${name}_REJECTED`]: (state = DEFAULT, action) => ({\n      ...state,\n      error: action.payload,\n      loading: false\n    }),\n    [`${name}_FULFILLED`]: (state = DEFAULT, action) => {\n      let result = action.payload\n      let ret = {\n        ...state,\n        error: null,\n        loading: false,\n        result: result\n      }\n\n      switch (type) {\n        case 'find':\n          ret.current = null\n          ret.store = result.reduce((acc, val) => {\n            if (!val[idField]) console.warn('Received object without valid idField')\n            else acc[val[idField]] = val\n            return acc\n          }, {})\n          break\n\n        case 'get':\n          ret.current = result\n          ret.store[result[idField]] = result\n          break\n\n        case 'create':\n        case 'patch':\n          ret.current = result\n          ret.saved = Date.now()\n          ret.store[result[idField]] = result\n          break\n\n        case 'remove':\n          ret.current = null\n          delete ret.store[result[idField]]\n          break\n\n        default:\n          throw new Error('Invalid method type ' + type)\n      }\n      ret.keys = Object.keys(ret.store)\n      return ret\n    }\n  }\n}\n\nfunction reduxifyService (app, actions, reducers, route, name, idField, sortFunctions) {\n  const SERVICE_NAME = `services/${name.toUpperCase()}_`\n\n  const service = app.service(route)\n  if (!service) throw new Error(`Could not find service ${route}`)\n\n  // Action types\n  const FIND = `${SERVICE_NAME}FIND`\n  const GET = `${SERVICE_NAME}GET`\n  const CREATE = `${SERVICE_NAME}CREATE`\n  const PATCH = `${SERVICE_NAME}PATCH`\n  const REMOVE = `${SERVICE_NAME}REMOVE`\n  const RESET = `${SERVICE_NAME}RESET`\n  const SET_CURRENT = `${SERVICE_NAME}SET_CURRENT`\n  const SORT = `${SERVICE_NAME}SORT`\n\n  actions[name] = {\n    find: createAction(FIND, (params) => ({ promise: service.find(params) })),\n    get: createAction(GET, (id, params) => ({ promise: service.get(id, params) })),\n    create: createAction(CREATE, (data, params) => ({ promise: service.create(data, params) })),\n    patch: createAction(PATCH, (id, data, params) => ({ promise: service.patch(id, data, params) })),\n    remove: createAction(REMOVE, (id, params) => ({ promise: service.remove(id, params) })),\n    setCurrent: createAction(SET_CURRENT),\n    sort: createAction(SORT),\n    reset: createAction(RESET)\n  }\n\n  reducers[name] = handleActions(Object.assign({},\n    createMethodReducer(FIND, 'find', idField),\n    createMethodReducer(GET, 'get', idField),\n    createMethodReducer(CREATE, 'create', idField),\n    createMethodReducer(PATCH, 'patch', idField),\n    createMethodReducer(REMOVE, 'remove', idField),\n    {\n      [SET_CURRENT]: (state, action) => {\n        if (state.loading) return state\n        return {\n          ...state,\n          current: state.store[action.payload]\n        }\n      },\n      [SORT]: (state, action) => {\n        if (state.loading) return state\n        let sortBy = action.payload\n        if (typeof sortBy === 'string') sortBy = sortFunctions[sortBy]\n        return {\n          ...state,\n          keys: [...state.keys].sort(sortBy(state.store))\n        }\n      },\n      [RESET]: (state, action) => {\n        if (state.loading) return state\n        return {\n          ...state,\n          error: null,\n          loading: false,\n          result: null,\n          current: null,\n          store: {},\n          keys: [],\n          saved: 0\n        }\n      }\n    }\n  ), {\n    error: null,\n    loading: false,\n    result: null,\n    current: null,\n    store: {},\n    saved: 0,\n    keys: []\n  })\n}\n\n/**\n * Creates redux bindings (action-creators and reducers) for each service\n * @param  {object} app           FeathersJS client instance\n * @param  {object} actions       Object wherein to store the service action-creators\n * @param  {object} reducers      Object wherein to store the service reducers\n * @param  {object} routeNameMap  Object with the following format: { serviceName: 'api/service-url', ... }\n * @param  {string} idField       Field used for ids, default `id`.\n * @param  {object} sortFunctions Object with named sorting functions, eg: { 'nameAsc': store => (a, b) => store[a].name.localeCompare(store[b].name) }\n */\nexport default function reduxifyServices (app, actions, reducers, routeNameMap, idField = ID_FIELD, sortFunctions = SORT_FUNCS) {\n  let names = Object.keys(routeNameMap)\n  for (let i = 0; i < names.length; i++) {\n    reduxifyService(app, actions, reducers, routeNameMap[names[i]], names[i], idField, sortFunctions)\n  }\n}\n","import { createAction, handleActions } from 'redux-actions'\n\n/**\n * Creates Redux bindings (reducers and actions) for the FeathersJS authentication service\n * @param {object}    app            FeathersJS client instance\n * @param {object}    actions        Object wherein to store the service action-creators\n * @param {object}    reducers       Object wherein to store the service reducers\n * @param {object}    authConfig     Optional. Object with keys: path, service, and storageKey (all strings)\n * @param {function}  authInitialize Optional. Function that runs after the user has authenticated.\n *                                   Takes in `data`, and should return it afterwards.\n */\nexport default function reduxifyAuth (app, actions, reducers, authConfig, authInitialize = (data => data)) {\n  // ACTION TYPES\n  const AUTHENTICATE = 'auth/AUTHENTICATE'\n  const LOGOUT = 'auth/LOGOUT'\n\n  // ACTION CREATORS\n  actions.auth = {\n    // Note: action.payload in reducer will have the value of .data below\n    authenticate: createAction(\n      AUTHENTICATE, (p) => ({\n        promise: app.authenticate(p).then(authInitialize),\n        data: undefined\n      })\n    ),\n    logout: createAction(LOGOUT),\n    checkJWT: jwt => {\n      // Try to fetch from local storage\n      if (!jwt) {\n        jwt = app.get('storage').getItem(authConfig.storageKey || 'feathers-jwt')\n      }\n\n      if (!jwt) return false\n\n      let decoded\n      try {\n        let parts = jwt.split('.')\n        decoded = window.atob(parts[1])\n        decoded = JSON.parse(decoded)\n      } catch (e) {\n        return false\n      }\n\n      // Check expiration date\n      if (!decoded.exp || decoded.exp < Date.now()) {\n        return false\n      }\n\n      // Update passport, fetch the user, then simulate authenticate\n      return app.passport.setJWT({ accessToken: jwt })\n        .then(() => actions[authConfig.reduxService || 'users'].get(decoded.userId))\n        .then(result => {\n          const user = result.value\n          return {\n            type: AUTHENTICATE + '_FULFILLED',\n            payload: {\n              accessToken: jwt,\n              user\n            }\n          }\n        })\n    }\n  }\n\n  // REDUCER\n  reducers.auth = handleActions(\n    {\n      [`${AUTHENTICATE}_PENDING`]: (state, action) => {\n        return ({\n          ...state,\n          errors: null,\n          loading: true,\n          valid: false,\n          admin: false,\n          user: null,\n          token: null,\n          ignorePendingAuth: false\n        })\n      },\n\n      [`${AUTHENTICATE}_FULFILLED`]: (state, action) => {\n        const user = action.payload.user\n\n        if (state.ignorePendingAuth) {\n          // A logout was dispatched between the authentication being started and completed\n          app.logout()\n\n          return {\n            ...state,\n            errors: null,\n            loading: false,\n            valid: false,\n            admin: false,\n            data: null,\n            token: null,\n            ignorePendingAuth: false\n          }\n        }\n\n        return {\n          ...state,\n          errors: null,\n          loading: false,\n          valid: true,\n          admin: user.admin || false,\n          user: user,\n          token: action.payloadtoken,\n          ignorePendingAuth: false\n        }\n      },\n\n      [`${AUTHENTICATE}_REJECTED`]: (state, action) => {\n        return {\n          ...state,\n          // action.payload = { name: \"NotFound\", message: \"No record found for id 'G6HJ45'\",\n          //   code:404, className: \"not-found\" }\n          errors: action.payload,\n          loading: false,\n          valid: false,\n          admin: false,\n          user: null,\n          token: null,\n          ignorePendingAuth: false\n        }\n      },\n\n      [LOGOUT]: (state, action) => {\n        app.logout()\n\n        return ({\n          ...state,\n          errors: null,\n          loading: null,\n          valid: false,\n          admin: false,\n          user: null,\n          token: null,\n          // Ignore the result if an authentication has been started\n          ignorePendingAuth: state.isLoading\n        })\n      }\n    },\n    {\n      errors: null,\n      loading: false,\n      valid: false,\n      admin: false,\n      user: null,\n      ignorePendingAuth: false\n    }\n  )\n}\n","import { bindActionCreators } from 'redux'\n\n/**\n * Method to bind a given dispatch function with the passed services.\n *\n * This helps with not having to pass down store.dispatch as a prop everywhere\n * Read More: http://redux.js.org/docs/api/bindActionCreators.html\n *\n * @param  {object}   services        Using the default reduxifyService method\n * @param  {function} dispatch        The relevant store.dispatch function which is to be bounded to actionCreators\n * @param  {array}    targetActions   List of action names to be targeted for binding\n * @return {object}                   Returns the new services object with the bounded action creators\n */\nexport default function (dispatch, services, targetActions) {\n  targetActions = targetActions || [\n    // default targets from feathers-redux\n    'find',\n    'get',\n    'create',\n    'patch',\n    'remove',\n    'reset',\n    'setCurrent',\n    'sort',\n    // couple more optional ones in case feathers-reduxify-authentication is being used\n    'authenticate',\n    'logout',\n    'checkJWT'\n  ]\n\n  const serviceNames = Object.keys(services)\n  // map over the services object to get every service\n  serviceNames.forEach(name => {\n    const methodNames = Object.keys(services[name])\n\n    // map over every method in the service\n    methodNames.forEach(method => {\n      // if method is in targeted actions then replace it with bounded method\n      if (targetActions.indexOf(method) >= 0) {\n        services[name][method] = bindActionCreators(\n          services[name][method],\n          dispatch\n        )\n      }\n    })\n  })\n\n  return services\n}\n","import thunk from 'redux-thunk'\nimport promiseMiddleware from 'redux-promise-middleware'\nimport createClient from './create-client'\nimport reduxifyServices from './reduxify-services'\nimport reduxifyAuth from './reduxify-auth'\nimport bindServicesWithDispatch from './bind-services'\n\nlet client\nlet services\nlet serviceReducers\nlet serviceNames\nlet servicesBound = false\n\nexport default {\n  /**\n   * Creates the FeathersJS client and configures auth and services\n   * @param  {boolean}  options.useSockets      When true, a socket.io connection to the API server will be created\n   * @param  {string}   options.apiUrl          URL to the API server\n   * @param  {object}   options.serviceNameMap  Object with serviceName as the keys, and remote service-url as the values\n   * @param  {object}   options.authConfig      Optional. Object with keys: path, service, and storageKey (all strings)\n   * @param  {function} options.authInitalize   Optional. Function that runs after the user has authenticated. Takes in\n   *                                            `data`, and should return it afterwards.\n   * @param  {string}   options.idField         Optional. Field returned by server that has the `id` value. Default 'id'\n   * @param  {object}   options.sortFunctions   Optional. Object with the name of a sort function as the key and a\n   *                                            function that takes in the store and returns a valid sort function as\n   *                                            the value. Ex: `store => (a, b) => store[a].name.localeCompare(store[b].name)`\n   * @return {object}   An object with all serviceNames mapped to objects with their action creators.\n   */\n  setup: ({ useSockets, apiUrl, serviceNameMap, authConfig, authInitalize, idField, sortFunctions }) => {\n    client = createClient(useSockets, apiUrl, authConfig)\n\n    services = {}\n    serviceReducers = {}\n    serviceNames = Object.keys(serviceNameMap)\n    reduxifyServices(client, services, serviceReducers, serviceNameMap, idField, sortFunctions)\n\n    if (authConfig) {\n      serviceNames.unshift('auth')\n      reduxifyAuth(client, services, serviceReducers, authConfig, authInitalize)\n    }\n\n    return services\n  },\n\n  /**\n   * Returns the FeathersJS client instance (after setup() has been called)\n   */\n  getClient: () => client,\n\n  /**\n   * Returns the services object, which has all their action-creators (after setup() has been called). If the store\n   * param is passed and the services have not been bound with the store's dispatch function, the binding takes place.\n   * @param  {object} store Redux store\n   */\n  getServices: (store) => {\n    if (store && !servicesBound) {\n      bindServicesWithDispatch(store.dispatch, services)\n    }\n    return services\n  },\n\n  /**\n   * Returns reducers for all services in a object where the keys are service names and the values are their reducers\n   */\n  getServiceReducers: () => serviceReducers,\n\n  /**\n   * Helper function for redux store. Returns an array with reduxThunk and reduxPromimseMiddleware, which are needed to\n   * process the events from the services. If you are already using these two middleware libraries, you do not need to\n   * use this function.\n   */\n  getMiddleware: () => ([ thunk, promiseMiddleware() ])\n}\n"],"names":["createRestClient","useSockets","apiUrl","auth","client","feathers","configure","socketio","io","rest","axios","set","window","localStorage","authentication","ID_FIELD","SORT_FUNCS","a","b","store","name","localeCompare","Number","rank","createMethodReducer","type","idField","DEFAULT","state","action","payload","result","ret","current","reduce","acc","val","console","warn","saved","Date","now","Error","keys","Object","reduxifyService","app","actions","reducers","route","sortFunctions","SERVICE_NAME","toUpperCase","service","FIND","GET","CREATE","PATCH","REMOVE","RESET","SET_CURRENT","SORT","createAction","params","promise","find","id","get","data","create","patch","remove","handleActions","assign","loading","sortBy","sort","reduxifyServices","routeNameMap","names","i","length","reduxifyAuth","authConfig","authInitialize","AUTHENTICATE","LOGOUT","p","authenticate","then","undefined","jwt","getItem","storageKey","decoded","parts","split","atob","JSON","parse","e","exp","passport","setJWT","accessToken","reduxService","userId","user","value","ignorePendingAuth","logout","admin","payloadtoken","isLoading","dispatch","services","targetActions","serviceNames","forEach","methodNames","indexOf","method","bindActionCreators","serviceReducers","servicesBound","serviceNameMap","authInitalize","createClient","unshift","thunk","promiseMiddleware"],"mappings":"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"}